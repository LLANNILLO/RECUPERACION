// Crear una instancia de PDOProducto (o cualquier otra clase que implemente IntRepoProducto)
$pdoProducto = new PDOProducto();

// Crear una instancia de Produ pasando la instancia de PDOProducto como argumento
$produ = new Produ($pdoProducto);

// Utilizar los métodos de Produ para interactuar con los productos
$producto = new Producto(/* parámetros */);
$produ->crearProducto($producto);
$productos = $produ->listarProductos();
$producto = $produ->obtenerProductoPorId(1);
$produ->borrarProducto(1);

public function crear(Producto $producto): bool
{
    $conexion = ConexionBD::getConnection();

    try {
        // Comenzamos una transacción
        $conexion->beginTransaction();

        // Insertamos la imagen en la tabla de imágenes
        $consultaImagen = $conexion->prepare('INSERT INTO imagenes(url) VALUES(?)');
        $creacion_imagen = $consultaImagen->execute([$producto->getImagen()]);

        // Obtenemos el ID de la imagen insertada
        $id_imagen = $conexion->lastInsertId();

        // Insertamos el producto en la tabla de productos
        $consultaProducto = $conexion->prepare('INSERT INTO productos(nombre_producto, descripcion, id_imagen, id_familia) VALUES(?, ?, ?, ?)');
        $creacion_producto = $consultaProducto->execute([
            $producto->getNombreProducto(),
            $producto->getDescripcion(),
            $id_imagen,
            $producto->getFamilia()
        ]);

        // Confirmamos la transacción si ambas inserciones tienen éxito
        if ($creacion_imagen && $creacion_producto) {
            $conexion->commit();
            return true;
        } else {
            // Revertimos la transacción si ocurre algún error
            $conexion->rollBack();
            return false;
        }
    } catch (PDOException $exception) {
        // Manejo de excepciones: puedes registrar el error o lanzar una excepción personalizada
        error_log("Error al crear producto: " . $exception->getMessage());

        // Revertimos la transacción en caso de excepción
        $conexion->rollBack();
        return false;
    } finally {
        // Cerramos la conexión a la base de datos
        ConexionBD::closeConnection();
    }
}

Ejemplo de familias de productos:

USE tienda_videojuegos;

-- Insertar las categorías de videojuegos en la tabla
INSERT INTO familias (nombre_familia)
VALUES 
('Accion'),
('Aventura'),
('Rol'),
('Estrategia'),
('Hack & Slash'),
('Metroidvania'),
('Roguelike'),
('Simulacion'),
('Deportes'),
('Carreras'),
('Puzzles'),
('Aventuras Graficas'),
('Mundo Abierto'),
('Shooter');
